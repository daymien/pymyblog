[app:pymyblog]
use = egg:myblog
pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = false
pyramid.default_locale_name = de
pyramid.includes =
    pyramid_tm

sqlalchemy.url = sqlite:///%(here)s/myblog.db
jinja2.directories = myblog:templates


[filter:translogger]
use = egg:Paste#translogger
setup_console_handler = False

[pipeline:main]
pipeline = translogger
           pymyblog

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

# Begin logging configuration

[loggers]
keys = root, log, sqlalchemy, wsgi

[handlers]
keys = console, log, accesslog

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console, log

[logger_log]
level = INFO
handlers =
qualname = myblog

[logger_wsgi]
level = INFO
handlers = console, accesslog
qualname = wsgi
propagate = 0

[logger_sqlalchemy]
level = INFO
handlers = 
qualname = sql

qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_log]
class = logging.handlers.TimedRotatingFileHandler
args = ('%(here)s/log/pymyblog.log', 'midnight', 1, 7,)
level = NOTSET
formatter = generic 

[handler_accesslog]
class = logging.handlers.TimedRotatingFileHandler
args = ('%(here)s/log/access.log', 'midnight', 1, 7,)
level = INFO
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
